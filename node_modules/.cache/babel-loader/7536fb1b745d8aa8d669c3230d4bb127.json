{"ast":null,"code":"import _regeneratorRuntime from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/m9/Documents/nft-marketplace-starter-kit/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // first up is to detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                if (!provider) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                console.log('ethereum wallet is detected.');\n                window.web3 = new Web3(provider);\n                _context2.next = 8;\n                return this.loadBlockchainData();\n\n              case 8:\n                _context2.next = 11;\n                break;\n\n              case 10:\n                // no ethereum provider\n                console.log('no ethereum wallet detected.');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return window.ethereum.enable();\n\n              case 3:\n                _context3.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts\n                });\n                console.log(this.state.account);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"NFT Marketplace\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/m9/Documents/nft-marketplace-starter-kit/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","KryptoBird","App","loadWeb3","provider","console","log","window","web3","loadBlockchainData","ethereum","enable","eth","getAccounts","accounts","setState","account","state","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;IAEMC,G;;;;;;;;;;;;;;;;uBAGS,KAAKC,QAAL,E;;;;;;;;;;;;;;;QAGX;;;;;;;;;;;;;;uBAE2BH,sBAAsB,E;;;AAAvCI,gBAAAA,Q;;qBAQHA,Q;;;;;AACCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAC,gBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIT,IAAJ,CAASK,QAAT,CAAd;;uBACM,KAAKK,kBAAL,E;;;;;;;AAEN;AACAJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKEE,gBAAAA,I,GAAOD,MAAM,CAACC,I;;uBACdD,MAAM,CAACG,QAAP,CAAgBC,MAAhB,E;;;;uBACiBH,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAAEF;AAAV,iBAAd;AACAT,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,KAAL,CAAWD,OAAvB;;;;;;;;;;;;;;;;;;AAGJ,eAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKD,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAKH;;;;EA/CalB,S;;AAkDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\n\nclass App extends Component {\n\n     async componentDidMount(){\n         await this.loadWeb3();\n     }\n\n    // first up is to detect ethereum provider\n    async loadWeb3() {\n        const provider = await detectEthereumProvider();\n\n        // modern browsers\n        // if there is a provider then\n        // lets log its working and access\n        // the window from the doc to set\n        // Web3 to the provider\n\n        if(provider) {\n            console.log('ethereum wallet is detected.');\n            window.web3 = new Web3(provider);\n            await this.loadBlockchainData();\n        }else{\n            // no ethereum provider\n            console.log('no ethereum wallet detected.');\n        }\n    }\n\n    async loadBlockchainData(){\n        const web3 = window.web3;\n        await window.ethereum.enable();\n        const accounts = await web3.eth.getAccounts();\n        this.setState({account: accounts});\n        console.log(this.state.account);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '',\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>NFT Marketplace</h1>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}