{"ast":null,"code":"import _toConsumableArray from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/m9/Documents/nft-marketplace-starter-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/m9/Documents/nft-marketplace-starter-kit/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardImage, MDB } from 'mdb-react-ui-kit';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // first up is to detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                if (!provider) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                window.web3 = new Web3(provider);\n                _context2.next = 7;\n                return this.loadBlockchainData();\n\n              case 7:\n                _context2.next = 10;\n                break;\n\n              case 9:\n                // no ethereum provider\n                window.alert('no ethereum wallet detected.');\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, totalSupply, i, _KryptoBird;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.requestAccounts();\n\n              case 3:\n                _context3.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 9;\n                return web3.eth.net.getId();\n\n              case 9:\n                networkId = _context3.sent;\n                networkData = KryptoBird.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                abi = KryptoBird.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 18;\n                return this.state.contract.methods.totalSupply().call();\n\n              case 18:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                });\n                i = 0;\n\n              case 21:\n                if (!(i < totalSupply)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 24;\n                return this.state.contract.methods.kryptoBirdz(i).call();\n\n              case 24:\n                _KryptoBird = _context3.sent;\n                this.setState({\n                  kryptoBirdz: [].concat(_toConsumableArray(this.state.kryptoBirdz), [_KryptoBird])\n                });\n\n              case 26:\n                i++;\n                _context3.next = 21;\n                break;\n\n              case 29:\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert('Smart Contract not deployed.');\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (kryptoBird) {\n      _this.state.contract.methods.mint(kryptoBird).send({\n        from: _this.state.account\n      }).once('Receipt', function (Receipt) {\n        _this.setState({\n          kryptoBird: [].concat(_toConsumableArray(_this.state.kryptoBirdz), [KryptoBird])\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 0,\n      kryptoBirdz: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, console.log(this.state), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"NFTS (Non Fungible Tokens)\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nave-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        style: {\n          opacity: '0.8'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: '40px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"NFT Marketplace\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this2.mint(_this2.kryptoBird.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter file URL\",\n        ref: function ref(input) {\n          return _this2.kryptoBird = input;\n        },\n        className: \"form-control mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Mint\",\n        className: \"form-control btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row textCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.kryptoBirdz.map(function (kryptoBird, key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          className: \"token\",\n          style: {\n            maxWidth: '22rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(MDBCardImage, {\n          className: \"img\",\n          src: kryptoBird,\n          position: \"top\",\n          height: \"250rem\",\n          style: {\n            marginRight: '4px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(MDBCardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(MDBCardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" Lorem Ipsum \"), React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \" Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \")))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/m9/Documents/nft-marketplace-starter-kit/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","KryptoBird","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardImage","MDB","App","loadWeb3","provider","window","web3","loadBlockchainData","alert","eth","requestAccounts","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","abi","address","contract","Contract","state","methods","totalSupply","call","i","kryptoBirdz","props","mint","kryptoBird","send","from","once","Receipt","console","log","color","opacity","marginTop","event","preventDefault","value","input","map","key","maxWidth","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\nimport {MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardImage, MDB} from 'mdb-react-ui-kit';\nimport './App.css';\n\nclass App extends Component {\n\n     async componentDidMount(){\n         await this.loadWeb3();\n     }\n\n    // first up is to detect ethereum provider\n    async loadWeb3() {\n        const provider = await detectEthereumProvider();\n\n        // modern browsers\n        // if there is a provider then\n        // lets log its working and access\n        // the window from the doc to set\n        // Web3 to the provider\n\n        if(provider) {\n            window.web3 = new Web3(provider);\n            await this.loadBlockchainData();\n        }else{\n            // no ethereum provider\n            window.alert('no ethereum wallet detected.');\n        }\n    }\n\n    async loadBlockchainData(){\n        const web3 = window.web3;\n        await web3.eth.requestAccounts();\n        const accounts = await web3.eth.getAccounts();\n        this.setState({account: accounts[0]});\n\n        const networkId = await web3.eth.net.getId();\n        const networkData = KryptoBird.networks[networkId]\n\n        if(networkData) {\n            const abi = KryptoBird.abi;\n            const address = networkData.address;\n            const contract = new web3.eth.Contract(abi, address);\n            this.setState({contract});\n            \n            const totalSupply = await this.state.contract.methods.totalSupply().call();\n            this.setState({totalSupply});\n\n            for(let i = 0; i < totalSupply; i++){\n                const KryptoBird = await this.state.contract.methods.kryptoBirdz(i).call();\n                this.setState({\n                    kryptoBirdz: [...this.state.kryptoBirdz, KryptoBird]\n                });\n            }\n        }else {\n            window.alert('Smart Contract not deployed.');\n        }\n    }\n\n    mint = (kryptoBird) => {\n        this.state.contract.methods.mint(kryptoBird).send({from: this.state.account}).once('Receipt', (Receipt) => {\n            this.setState({\n                kryptoBird: [...this.state.kryptoBirdz, KryptoBird]\n            });\n        });\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '',\n            contract: null,\n            totalSupply: 0,\n            kryptoBirdz: [],\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                {console.log(this.state)}\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\" style={{color:'white'}}>\n                        NFTS (Non Fungible Tokens)\n                    </div>\n                    <ul className=\"navbar-nav px-3\">\n                        <li className=\"nave-item text-nowrap d-none d-sm-none d-sm-block\">\n                            <small className=\"text-white\">\n                                {this.state.account}\n                            </small>\n                        </li>\n                    </ul>\n                </nav>\n\n                <div className=\"container-fluid mt-1\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n                            <div className=\"content mr-auto ml-auto\" style={{opacity:'0.8'}}>\n                                <h1 style={{marginTop:'40px'}}>NFT Marketplace</h1>\n                                <form onSubmit={(event) => {\n                                    event.preventDefault();\n                                    this.mint(this.kryptoBird.value);\n                                }}>\n                                    <input type=\"text\" placeholder=\"Enter file URL\" ref={(input) => this.kryptoBird = input} className=\"form-control mb-1\"/>\n                                    <input type=\"submit\" value=\"Mint\" className=\"form-control btn btn-primary\"/>\n                                </form>\n                            </div>\n                        </main>\n                    </div>\n                        <hr></hr>\n                        <div className=\"row textCenter\">\n                            {this.state.kryptoBirdz.map((kryptoBird, key) => {\n                                return(\n                                    <div>\n                                        <div>\n                                        <MDBCard className='token' style={{maxWidth:'22rem'}}>\n                                            <MDBCardImage className='img' src={kryptoBird} position='top' height='250rem' style={{marginRight: '4px'}}/>\n                                            <MDBCardBody>\n                                                <MDBCardTitle> Lorem Ipsum </MDBCardTitle>\n                                                <MDBCardText> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. </MDBCardText>\n                                            </MDBCardBody>\n                                        </MDBCard>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}